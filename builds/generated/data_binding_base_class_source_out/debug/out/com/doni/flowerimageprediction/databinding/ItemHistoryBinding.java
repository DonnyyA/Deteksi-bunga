// Generated by view binder compiler. Do not edit!
package com.doni.flowerimageprediction.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doni.flowerimageprediction.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView pred;

  @NonNull
  public final ImageView prevImage;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final CardView roundedImage;

  private ItemHistoryBinding(@NonNull CardView rootView, @NonNull CardView cardView,
      @NonNull TextView date, @NonNull TextView pred, @NonNull ImageView prevImage,
      @NonNull ProgressBar progressBar, @NonNull CardView roundedImage) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.date = date;
    this.pred = pred;
    this.prevImage = prevImage;
    this.progressBar = progressBar;
    this.roundedImage = roundedImage;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardView = (CardView) rootView;

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.pred;
      TextView pred = ViewBindings.findChildViewById(rootView, id);
      if (pred == null) {
        break missingId;
      }

      id = R.id.prevImage;
      ImageView prevImage = ViewBindings.findChildViewById(rootView, id);
      if (prevImage == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.roundedImage;
      CardView roundedImage = ViewBindings.findChildViewById(rootView, id);
      if (roundedImage == null) {
        break missingId;
      }

      return new ItemHistoryBinding((CardView) rootView, cardView, date, pred, prevImage,
          progressBar, roundedImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
